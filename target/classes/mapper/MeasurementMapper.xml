<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yifei.dao.MeasurementMapper">
  <resultMap id="BaseResultMap" type="com.yifei.bean.Measurement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="temperture" jdbcType="CHAR" property="temperture" />
    <result column="light" jdbcType="CHAR" property="light" />
    <result column="humidity" jdbcType="CHAR" property="humidity" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="nodeid" jdbcType="INTEGER" property="nodeid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, temperture, light, humidity, date, nodeid
  </sql>
  
  
  <select id="selectByNodeIDForNewest"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from measurement where nodeid = #{node,jdbcType=INTEGER} ORDER BY date desc LIMIT 1
  </select>
  
  <select id="selectByExample" parameterType="com.yifei.bean.MeasurementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from measurement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from measurement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from measurement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yifei.bean.MeasurementExample">
    delete from measurement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yifei.bean.Measurement">
    insert into measurement (id, temperture, light, 
      humidity, date, nodeid
      )
    values (#{id,jdbcType=INTEGER}, #{temperture,jdbcType=CHAR}, #{light,jdbcType=CHAR}, 
      #{humidity,jdbcType=CHAR}, #{date,jdbcType=TIMESTAMP}, #{nodeid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yifei.bean.Measurement">
    insert into measurement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="temperture != null">
        temperture,
      </if>
      <if test="light != null">
        light,
      </if>
      <if test="humidity != null">
        humidity,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="nodeid != null">
        nodeid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="temperture != null">
        #{temperture,jdbcType=CHAR},
      </if>
      <if test="light != null">
        #{light,jdbcType=CHAR},
      </if>
      <if test="humidity != null">
        #{humidity,jdbcType=CHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="nodeid != null">
        #{nodeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yifei.bean.MeasurementExample" resultType="java.lang.Long">
    select count(*) from measurement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update measurement
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.temperture != null">
        temperture = #{record.temperture,jdbcType=CHAR},
      </if>
      <if test="record.light != null">
        light = #{record.light,jdbcType=CHAR},
      </if>
      <if test="record.humidity != null">
        humidity = #{record.humidity,jdbcType=CHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nodeid != null">
        nodeid = #{record.nodeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update measurement
    set id = #{record.id,jdbcType=INTEGER},
      temperture = #{record.temperture,jdbcType=CHAR},
      light = #{record.light,jdbcType=CHAR},
      humidity = #{record.humidity,jdbcType=CHAR},
      date = #{record.date,jdbcType=TIMESTAMP},
      nodeid = #{record.nodeid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yifei.bean.Measurement">
    update measurement
    <set>
      <if test="temperture != null">
        temperture = #{temperture,jdbcType=CHAR},
      </if>
      <if test="light != null">
        light = #{light,jdbcType=CHAR},
      </if>
      <if test="humidity != null">
        humidity = #{humidity,jdbcType=CHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="nodeid != null">
        nodeid = #{nodeid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yifei.bean.Measurement">
    update measurement
    set temperture = #{temperture,jdbcType=CHAR},
      light = #{light,jdbcType=CHAR},
      humidity = #{humidity,jdbcType=CHAR},
      date = #{date,jdbcType=TIMESTAMP},
      nodeid = #{nodeid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>